dexterity.namespace=dx
dexterity.descriptors=template,call,noop,ignore,env,uniq,sub,ghost,\
	if,case,each,comment,cdata,text,attr,attrs,cattr,cattrs

# block descriptors are mildly exceptional and must be tagged as such
# an optional end-block attribute may be specified
dexterity.block=case
dexterity.block.case=default

# associate attributes with implementing classes

# empty args
dexterity.a.noop=org.dykman.dexter.dexterity.NoopDescriptor
dexterity.a.ghost=org.dykman.dexter.dexterity.GhostDescriptor
dexterity.a.ignore=org.dykman.dexter.dexterity.NullDescriptor
dexterity.a.uniq=org.dykman.dexter.dexterity.UniqAttrDescriptor

#label
dexterity.a.template=org.dykman.dexter.dexterity.TemplateDescriptor
dexterity.a.call=org.dykman.dexter.dexterity.CallTemplateDescriptor

# xpath
dexterity.a.sub=org.dykman.dexter.dexterity.SubdocDescriptor
dexterity.a.env=org.dykman.dexter.dexterity.EnvDescriptor
dexterity.a.each=org.dykman.dexter.dexterity.SelectDescriptor
dexterity.a.text=org.dykman.dexter.dexterity.MapNodeDescriptor
dexterity.a.cpy=org.dykman.dexter.dexterity.CopyElementDescriptor

# xpath optional
dexterity.a.cdata=org.dykman.dexter.dexterity.CDataDescriptor
dexterity.a.comment=org.dykman.dexter.dexterity.CommentDescriptor

# xpath tests
dexterity.a.if=org.dykman.dexter.dexterity.TestDescriptor
dexterity.a.case=org.dykman.dexter.dexterity.CaseDescriptor

# value-template +: label ':' xpath
## attribute writer # value-template
dexterity.a.attr=org.dykman.dexter.dexterity.MapAttributeDescriptor
dexterity.a.attrs=org.dykman.dexter.dexterity.MapAttributeDescriptorS

## conditional attribute # value-template <SEPERATOR> test 
dexterity.a.cattr=org.dykman.dexter.dexterity.ConditionalAttributeDescriptor
dexterity.a.cattrs=org.dykman.dexter.dexterity.ConditionalAttributeDescriptorS
