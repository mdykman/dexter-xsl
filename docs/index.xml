<?xml-stylesheet href="docster.html.xsl" type="text/xsl" ?>
<doc>
    <copyright>dexter (c) 2007, 2008 Michael Dykman 
Free for use under version 2.0 of the Artistic License.     
http://www.opensource.org/licences/artistic-license.php</copyright>

	<title>Dexter: Descriptive XSL Transform Emitter</title>
	<subtitle><![CDATA[this.changes(everything);]]></subtitle>
	<author><![CDATA[Michael Dykman <michael@dykman.org>]]></author>
	<overview>
		<para><![CDATA[
			Dexter is an extensible tool designed to simplify the production of 
			XSLT stylesheets.
			]]></para>
	</overview>
	<references>
    <reference>
      <title>The Case for XSL</title>
      <summary>Reflections on the pros and cons of using XSLT in
		the web application build process and why Dexter is a perfect fit</summary>
      <url>case-for-xsl.xml</url>
    </reference>
    <reference>
      <title>Dexter User Guide</title>
      <summary>Reference material 
      needed to use dexter and dexterity to produce XSL stylesheets</summary>
      <url>dexter-user-guide.xml</url>
    </reference>
    <reference>
      <title>Dexter API</title>
      <summary>Reference material 
      for the developer who wishes to implement their own
      descriptors, editors and path functions</summary>
      <url>dexter-api.xml</url>
    </reference>
  </references>
	<section>
		<title>Dexter and it's Modules</title>
		<overview>
			<para>A general description of dexter, it's modules and it's design philosophy.</para>
		</overview>

		<chapter>
			<title>Dexter</title>
			<para>
	Dexter can generate XSL stylesheets using any well-formed XML document as 
	input.  Dexter-defined attributes can be added to specify transformation 
	rules in a design document such as an XHTML example layout.
			</para>
			<para>
	Dexter is a framework; 
	a generic XSLT generation engine with a rich API for 
	pluggable extension modules.  The user has the option of using the 
	built-in modules, implementing custom modules or a combination.
	It targets XSLT version 1.0.
			</para>
			<para>
	In it's present form, without addition modules, dexter is best suited
	for producing stylesheets from 'document' XML formats such XHTML, XUL and WML.
			</para>
			<para>
	The module 'dexterity' provides xml-agnostic operators for performing data
	substitution, conditional evaluation and loops.
			</para>
			<para>
	The module 'didi' provides XHTML-specific support, although some
	operators may be useful for other formats as well.
			</para>
			<para>
	For information about using dexter as a tool to generate XSL stylesheets
	with the built-in mechanisms, refer to the <link url="dexter-user-guide.xml">Dexter User Guide</link>.
			</para>
			<para>
	For information on extending dexter with custom modules
	refer to the <link url="dexter-api.xml">Dexter API</link>.
			</para>
			<para>
		Dexter grew from a need: the commercial web development industry 
		is under ever-mounting pressure to respond to rapidly evolving 
		user interface requirements.  All too often, even with the most
		careful planning, user interface upgrades require significant 
		portions of an application to be re-coded.  Over time, applications
		become unmaintainable as they are hacked to accomodate the
		latest vision.
			</para>
			<para>
		Why one wonders, have mainstream web developers all but 
		ignored XSLT? Certainly not the learning curve; competent web
		developers absorb new technologies constantly and XSLT is
		nearly 10 years old.  The short answer is: maintainence.
      I have a <link url="case-for-xsl.xml">full-length rant</link> on 
		the subject which explains how dexter solves this problem.
			</para>
			<para>
	Simplicity and conciseness are the primary design goals of dexter. 
	While dexter only directly exposes a small subset of XSLT, the 
	API makes it readily extensible and can be used to implement a wide variety
	of transformation patterns. 
			</para>
		</chapter>
		<chapter>
			<title>Dexterity</title>
			<para>
			Dexterity is the base module and is bound to the namespace 'dx' by default. 
			It defines a set of XML-agnostic descriptors which provide capabilities for 
			data mappings, conditional evaluation, iteration and sub-document creation. 
			Dexterity's descriptors expose a surprising amount of power
			to the user.  Details on dexterity's operators can be found 
			<link url="dexter-user-guide.xml#Dexterity">here</link>
			</para>
		</chapter>
		<chapter>
			<title>Didi</title>
			<para><![CDATA[
			Didi is an experimental module for interfacing XHTML documents
			and is the local module for implementation classes which relate
			specifically to XHTML. 
			Didi does provide the ironically undocumented editor 'meta' which
			inserts meta nodes according to an external file into 
			the document before it is rendered.
		Obviously, didi is XHTML-aware and is 
			not compatible with other XML formats. 
			]]>
			Details on didi's operators can be found 
			<link url="dexter-user-guide.xml#Didi">here</link>
			</para>
		</chapter>
	</section>
</doc>
